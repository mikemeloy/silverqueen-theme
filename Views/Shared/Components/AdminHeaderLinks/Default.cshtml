@model AdminHeaderLinksModel
@if (Model.IsCustomerImpersonated || Model.DisplayAdminLink)
{
    <li class="admin-header-links">
        @if (Model.IsCustomerImpersonated)
        {
            <div class="impersonate">
                <span>@T("Account.ImpersonatedAs") <span class="impersonatedCustomerName">@Model.ImpersonatedCustomerName</span></span>
                <a href="@Url.RouteUrl("Logout")" class="finish-impersonation" title="@T("Account.ImpersonatedAs.Finish.Hint")">@T("Account.ImpersonatedAs.Finish")</a>
            </div>
        }
        @if (Model.DisplayAdminLink)
        {
            <a href="@Url.Content("~/Admin")" class="administration">@T("Account.Administration")</a>
        }
        @if (!string.IsNullOrEmpty(Model.EditPageUrl))
        {
            <a href="@Model.EditPageUrl" class="manage-page">@T("Common.ManagePage")</a>
        }
    </li>
    @await Component.InvokeAsync(typeof(WidgetViewComponent), new { widgetZone = PublicWidgetZones.AdminHeaderLinksAfter, additionalData = Model })
}